{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozia\\\\exochess\\\\chess-game\\\\sandbox_chess\\\\src\\\\components\\\\Chessboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Tile from \"./Tile\";\nimport { pieceImages } from \"./pieces\";\n\n// eslint-disable-next-line max-lines-per-function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chessboard = () => {\n  _s();\n  const initialBoard = [[\"bR\", \"bKn\", \"bB\", \"bQ\", \"bK\", \"bB\", \"bKn\", \"bR\"], [\"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\"], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [\"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\"], [\"wR\", \"wKn\", \"wB\", \"wQ\", \"wK\", \"wB\", \"wKn\", \"wR\"]];\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  // eslint-disable-next-line complexity\n  const movePiece = (start, destination) => {\n    const newBoard = [...Array(8)];\n    // eslint-disable-next-line no-plusplus\n    for (let row = 0; row < 8; row++) {\n      newBoard[row] = [...Array(8)];\n      // eslint-disable-next-line no-plusplus\n      for (let col = 0; col < 8; col++) {\n        if (row === destination.row && col === destination.col) {\n          newBoard[row][col] = selectedPiece.label;\n        } else if (row === start.row && col === start.col) {\n          newBoard[row][col] = null;\n        } else {\n          newBoard[row][col] = board[row][col];\n        }\n      }\n    }\n    return newBoard;\n  };\n  const myChessboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-8 grid-rows-8 gap-0 w-800 h-800 bg-bisque\",\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Tile, {\n        label: pieceImages[piece],\n        isEven: (rowIndex + colIndex) % 2 === 0\n      }, \"\".concat(colIndex, \"-\").concat(rowIndex), false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard\",\n    children: myChessboard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n_s(Chessboard, \"JB+ED5ui4mMR887f+G2lhtTIsgg=\");\n_c = Chessboard;\nexport default Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["React","useState","Tile","pieceImages","jsxDEV","_jsxDEV","Chessboard","_s","initialBoard","board","setBoard","selectedPiece","setSelectedPiece","movePiece","start","destination","newBoard","Array","row","col","label","myChessboard","className","children","map","rowIndex","piece","colIndex","isEven","concat","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lozia/exochess/chess-game/sandbox_chess/src/components/Chessboard.jsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport Tile from \"./Tile\"\nimport { pieceImages } from \"./pieces\"\n\n// eslint-disable-next-line max-lines-per-function\nconst Chessboard = () => {\n  const initialBoard = [\n    [\"bR\", \"bKn\", \"bB\", \"bQ\", \"bK\", \"bB\", \"bKn\", \"bR\"],\n    [\"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\"],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [\"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\"],\n    [\"wR\", \"wKn\", \"wB\", \"wQ\", \"wK\", \"wB\", \"wKn\", \"wR\"]\n  ]\n  const [board, setBoard] = useState(initialBoard)\n  const [selectedPiece, setSelectedPiece] = useState(null)\n  // eslint-disable-next-line complexity\n  const movePiece = (start, destination) => {\n    const newBoard = [...Array(8)]\n    // eslint-disable-next-line no-plusplus\n    for (let row = 0; row < 8; row++) {\n      newBoard[row] = [...Array(8)]\n      // eslint-disable-next-line no-plusplus\n      for (let col = 0; col < 8; col++) {\n        if (row === destination.row && col === destination.col) {\n          newBoard[row][col] = selectedPiece.label\n        } else if (row === start.row && col === start.col) {\n          newBoard[row][col] = null\n        } else {\n          newBoard[row][col] = board[row][col]\n        }\n      }\n    }\n\n    return newBoard\n  }\nconst myChessboard = () => (\n  <div className=\"grid grid-cols-8 grid-rows-8 gap-0 w-800 h-800 bg-bisque\">\n    {board.map((row, rowIndex) => (\n      <div key={rowIndex} className=\"flex flex-col\">\n        {row.map((piece, colIndex) => (\n          <Tile\n            key={`${colIndex}-${rowIndex}`}\n            label={pieceImages[piece]}\n            isEven={(rowIndex + colIndex) % 2 === 0}\n          />\n        ))}\n      </div>\n    ))}\n  </div>\n)\n\n  return <div className=\"chessboard\">{myChessboard()}</div>\n}\n\nexport default Chessboard\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}