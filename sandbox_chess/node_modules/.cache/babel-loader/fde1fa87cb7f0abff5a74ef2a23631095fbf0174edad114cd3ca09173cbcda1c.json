{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozia\\\\exochess\\\\chess-game\\\\sandbox_chess\\\\src\\\\components\\\\Chessboard.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable max-lines-per-function */\nimport React, { useState } from \"react\";\nimport Tile from \"./Tile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chessboard = () => {\n  _s();\n  const initialBoard = [[\"bR\", \"bKn\", \"bB\", \"bQ\", \"bK\", \"bB\", \"bKn\", \"bR\"], [\"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\"], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [\"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\"], [\"wR\", \"wKn\", \"wB\", \"wQ\", \"wK\", \"wB\", \"wKn\", \"wR\"]];\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  function handleMove(start, destination) {\n    const newBoard = [...board];\n    const {\n      row: startRow,\n      col: startCol\n    } = start;\n    const {\n      row: destRow,\n      col: destCol\n    } = destination;\n    const isDestinationEmpty = newBoard[destRow][destCol] === null;\n    const isEnemyPiece = newBoard[destRow][destCol] && newBoard[destRow][destCol][0] !== selectedPiece[0];\n    if ((isDestinationEmpty || isEnemyPiece) && isValidMove(start, destination)) {\n      newBoard[destRow][destCol] = selectedPiece;\n      newBoard[startRow][startCol] = null;\n      setBoard(newBoard);\n      setSelectedPiece(null);\n    } else {\n      setSelectedPiece(null);\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function isValidMove(start, destination, piece) {\n    console.log(piece, destination, start);\n  }\n  const chessboard = board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Tile, {\n      piece: piece,\n      onSquareClick: () => {\n        if (piece && (!selectedPiece || piece[0] === selectedPiece[0])) {\n          setSelectedPiece(piece);\n        } else if (selectedPiece) {\n          handleMove({\n            row: rowIndex,\n            col: colIndex\n          }, {\n            row: rowIndex,\n            col: colIndex\n          });\n        }\n      }\n    }, \"\".concat(rowIndex, \"-\").concat(colIndex), false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, rowIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard\",\n    children: chessboard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 11\n  }, this);\n};\n_s(Chessboard, \"JB+ED5ui4mMR887f+G2lhtTIsgg=\");\n_c = Chessboard;\nexport default Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["React","useState","Tile","jsxDEV","_jsxDEV","Chessboard","_s","initialBoard","board","setBoard","selectedPiece","setSelectedPiece","handleMove","start","destination","newBoard","row","startRow","col","startCol","destRow","destCol","isDestinationEmpty","isEnemyPiece","isValidMove","piece","console","log","chessboard","map","rowIndex","className","children","colIndex","onSquareClick","concat","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lozia/exochess/chess-game/sandbox_chess/src/components/Chessboard.jsx"],"sourcesContent":["/* eslint-disable max-lines-per-function */\nimport React, { useState } from \"react\"\nimport Tile from \"./Tile\"\n\nconst Chessboard = () => {\n  const initialBoard = [\n    [\"bR\", \"bKn\", \"bB\", \"bQ\", \"bK\", \"bB\", \"bKn\", \"bR\"],\n    [\"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\"],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [\"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\"],\n    [\"wR\", \"wKn\", \"wB\", \"wQ\", \"wK\", \"wB\", \"wKn\", \"wR\"]\n  ]\n  const [board, setBoard] = useState(initialBoard)\n  const [selectedPiece, setSelectedPiece] = useState(null)\n\nfunction handleMove(start, destination) {\n  const newBoard = [...board]\n  const { row: startRow, col: startCol } = start\n  const { row: destRow, col: destCol } = destination\n  const isDestinationEmpty = newBoard[destRow][destCol] === null\n  const isEnemyPiece = newBoard[destRow][destCol] && newBoard[destRow][destCol][0] !== selectedPiece[0]\n\n  if ((isDestinationEmpty || isEnemyPiece) && isValidMove(start, destination)) {\n    newBoard[destRow][destCol] = selectedPiece\n    newBoard[startRow][startCol] = null\n    setBoard(newBoard)\n    setSelectedPiece(null)\n  } else {\n    setSelectedPiece(null)\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction isValidMove(start, destination, piece) {\n  console.log(piece, destination, start)\n}\n  const chessboard = board.map((row, rowIndex) => (\n    <div key={rowIndex} className=\"board-row\">\n      {row.map((piece, colIndex) => (\n        <Tile\n          key={`${rowIndex}-${colIndex}`}\n          piece={piece}\n          onSquareClick={() => {\n            if (piece && (!selectedPiece || piece[0] === selectedPiece[0])) {\n              setSelectedPiece(piece)\n            } else if (selectedPiece) {\n              handleMove({ row: rowIndex, col: colIndex }, { row: rowIndex, col: colIndex })\n            }\n          }}\n        />\n      ))}\n    </div>\n  ))\n\n   return <div className=\"chessboard\">{chessboard}</div>\n}\n\nexport default Chessboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}