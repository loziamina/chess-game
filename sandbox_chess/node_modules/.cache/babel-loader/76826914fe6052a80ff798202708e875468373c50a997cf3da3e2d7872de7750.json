{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozia\\\\exochess\\\\chess-game\\\\sandbox_chess\\\\src\\\\components\\\\Chessboard.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable max-lines-per-function */\nimport React, { useState } from \"react\";\nimport Tile from \"./Tile\";\nimport { pieceImages } from \"./pieces\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chessboard = () => {\n  _s();\n  const initialBoard = [[\"bR\", \"bKn\", \"bB\", \"bQ\", \"bK\", \"bB\", \"bKn\", \"bR\"], [\"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\"], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [\"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\"], [\"wR\", \"wKn\", \"wB\", \"wQ\", \"wK\", \"wB\", \"wKn\", \"wR\"]];\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  function handleMove(start, destination) {\n    const newBoard = [...board];\n    const {\n      row: startRow,\n      col: startCol\n    } = start;\n    const {\n      row: destRow,\n      col: destCol\n    } = destination;\n    const isDestinationEmpty = newBoard[destRow][destCol] === null;\n    const isEnemyPiece = newBoard[destRow][destCol] && newBoard[destRow][destCol][0] !== selectedPiece[0];\n    if ((isDestinationEmpty || isEnemyPiece) && isValidMove(start, destination)) {\n      newBoard[destRow][destCol] = selectedPiece;\n      newBoard[startRow][startCol] = null;\n      setBoard(newBoard);\n      setSelectedPiece(null);\n    } else {\n      setSelectedPiece(null);\n    }\n  }\n  const myChessboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-8 grid-rows-8 gap-0 w-800 h-800 bg-bisque\",\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Tile, {\n        label: pieceImages[piece],\n        isEven: (rowIndex + colIndex) % 2 === 0,\n        onMove: handleMove,\n        rowIndex: rowIndex,\n        colIndex: colIndex,\n        selectedPiece: selectedPiece\n      }, \"\".concat(colIndex, \"-\").concat(rowIndex), false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    children: myChessboard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Chessboard, \"JB+ED5ui4mMR887f+G2lhtTIsgg=\");\n_c = Chessboard;\nexport default Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["React","useState","Tile","pieceImages","jsxDEV","_jsxDEV","Chessboard","_s","initialBoard","board","setBoard","selectedPiece","setSelectedPiece","handleMove","start","destination","newBoard","row","startRow","col","startCol","destRow","destCol","isDestinationEmpty","isEnemyPiece","isValidMove","myChessboard","className","children","map","rowIndex","piece","colIndex","label","isEven","onMove","concat","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/lozia/exochess/chess-game/sandbox_chess/src/components/Chessboard.jsx"],"sourcesContent":["/* eslint-disable max-lines-per-function */\nimport React, { useState } from \"react\"\nimport Tile from \"./Tile\"\nimport { pieceImages } from \"./pieces\"\n\nconst Chessboard = () => {\n  const initialBoard = [\n    [\"bR\", \"bKn\", \"bB\", \"bQ\", \"bK\", \"bB\", \"bKn\", \"bR\"],\n    [\"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\"],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [\"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\"],\n    [\"wR\", \"wKn\", \"wB\", \"wQ\", \"wK\", \"wB\", \"wKn\", \"wR\"]\n  ]\n  const [board, setBoard] = useState(initialBoard)\n  const [selectedPiece, setSelectedPiece] = useState(null)\n\nfunction handleMove(start, destination) {\n  const newBoard = [...board]\n  const { row: startRow, col: startCol } = start\n  const { row: destRow, col: destCol } = destination\n  const isDestinationEmpty = newBoard[destRow][destCol] === null\n  const isEnemyPiece = newBoard[destRow][destCol] && newBoard[destRow][destCol][0] !== selectedPiece[0]\n  if ((isDestinationEmpty || isEnemyPiece) && isValidMove(start, destination)) {\n    newBoard[destRow][destCol] = selectedPiece\n    newBoard[startRow][startCol] = null\n    setBoard(newBoard)\n    setSelectedPiece(null)\n  } else {\n    setSelectedPiece(null)\n  }\n}\n\n  const myChessboard = () => (\n    <div className=\"grid grid-cols-8 grid-rows-8 gap-0 w-800 h-800 bg-bisque\">\n      {board.map((row, rowIndex) => (\n        <div key={rowIndex}>\n          {row.map((piece, colIndex) => (\n            <Tile\n              key={`${colIndex}-${rowIndex}`}\n              label={pieceImages[piece]}\n              isEven={(rowIndex + colIndex) % 2 === 0}\n              onMove={handleMove}\n              rowIndex={rowIndex}\n              colIndex={colIndex}\n              selectedPiece={selectedPiece}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n\n  return (\n    <div id=\"chessboard\">\n      {myChessboard()}\n    </div>\n  )\n}\n\nexport default Chessboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}