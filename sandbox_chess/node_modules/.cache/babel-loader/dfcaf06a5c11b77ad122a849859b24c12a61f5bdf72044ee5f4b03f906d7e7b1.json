{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozia\\\\exochess\\\\chess-game\\\\sandbox_chess\\\\src\\\\components\\\\Chessboard.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable max-lines-per-function */\nimport React, { useState } from \"react\";\nimport Tile from \"./Tile\";\nimport { pieceImages } from \"./pieces\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chessboard = () => {\n  _s();\n  const initialBoard = [[\"bR\", \"bKn\", \"bB\", \"bQ\", \"bK\", \"bB\", \"bKn\", \"bR\"], [\"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\"], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [\"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\"], [\"wR\", \"wKn\", \"wB\", \"wQ\", \"wK\", \"wB\", \"wKn\", \"wR\"]];\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  // eslint-disable-next-line complexity\n  const movePiece = (start, destination) => {\n    const newBoard = [...Array(8)];\n\n    // eslint-disable-next-line no-plusplus\n    for (let row = 0; row < 8; row++) {\n      newBoard[row] = [...Array(8)];\n\n      // eslint-disable-next-line no-plusplus\n      for (let col = 0; col < 8; col++) {\n        if (row === destination.row && col === destination.col) {\n          newBoard[row][col] = selectedPiece.label;\n        } else if (row === start.row && col === start.col) {\n          newBoard[row][col] = null;\n        } else {\n          newBoard[row][col] = board[row][col];\n        }\n      }\n    }\n    return newBoard;\n  };\n  const handleMove = _ref => {\n    let {\n      label,\n      rowIndex,\n      colIndex\n    } = _ref;\n    // eslint-disable-next-line no-console\n    console.log(\"Piece clicked:\", label);\n    if (selectedPiece) {\n      const newBoard = movePiece({\n        row: selectedPiece.rowIndex,\n        col: selectedPiece.colIndex\n      }, {\n        row: rowIndex,\n        col: colIndex\n      });\n      setBoard(newBoard);\n      setSelectedPiece(null);\n    } else {\n      setSelectedPiece({\n        label,\n        rowIndex,\n        colIndex\n      });\n    }\n  };\n  const myChessboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-8 grid-rows-8 gap-0 w-800 h-800 bg-bisque\",\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Tile, {\n        label: pieceImages[piece],\n        isEven: (rowIndex + colIndex) % 2 === 0,\n        onMove: handleMove,\n        rowIndex: rowIndex,\n        colIndex: colIndex,\n        selectedPiece: selectedPiece\n      }, \"\".concat(colIndex, \"-\").concat(rowIndex), false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    className: \"grid grid-cols-8 grid-rows-8 w-800 h-800 bg-bisque\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Chessboard, \"JB+ED5ui4mMR887f+G2lhtTIsgg=\");\n_c = Chessboard;\nexport default Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["React","useState","Tile","pieceImages","jsxDEV","_jsxDEV","Chessboard","_s","initialBoard","board","setBoard","selectedPiece","setSelectedPiece","movePiece","start","destination","newBoard","Array","row","col","label","handleMove","_ref","rowIndex","colIndex","console","log","myChessboard","className","children","map","piece","isEven","onMove","concat","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/lozia/exochess/chess-game/sandbox_chess/src/components/Chessboard.jsx"],"sourcesContent":["/* eslint-disable max-lines-per-function */\nimport React, { useState } from \"react\"\nimport Tile from \"./Tile\"\nimport { pieceImages } from \"./pieces\"\n\nconst Chessboard = () => {\n  const initialBoard = [\n    [\"bR\", \"bKn\", \"bB\", \"bQ\", \"bK\", \"bB\", \"bKn\", \"bR\"],\n    [\"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\", \"bP\"],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [\"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\", \"wP\"],\n    [\"wR\", \"wKn\", \"wB\", \"wQ\", \"wK\", \"wB\", \"wKn\", \"wR\"]\n  ]\nconst [board, setBoard] = useState(initialBoard)\nconst [selectedPiece, setSelectedPiece] = useState(null)\n// eslint-disable-next-line complexity\nconst movePiece = (start, destination) => {\n    const newBoard = [...Array(8)]\n\n    // eslint-disable-next-line no-plusplus\n    for (let row = 0; row < 8; row++) {\n      newBoard[row] = [...Array(8)]\n\n      // eslint-disable-next-line no-plusplus\n      for (let col = 0; col < 8; col++) {\n        if (row === destination.row && col === destination.col) {\n          newBoard[row][col] = selectedPiece.label\n        } else if (row === start.row && col === start.col) {\n          newBoard[row][col] = null\n        } else {\n          newBoard[row][col] = board[row][col]\n        }\n      }\n    }\n\n    return newBoard\n  }\n  const handleMove = ({ label, rowIndex, colIndex }) => {\n    // eslint-disable-next-line no-console\n    console.log(\"Piece clicked:\", label)\n\n    if (selectedPiece) {\n      const newBoard = movePiece(\n        { row: selectedPiece.rowIndex, col: selectedPiece.colIndex },\n        { row: rowIndex, col: colIndex }\n      )\n\n      setBoard(newBoard)\n      setSelectedPiece(null)\n    } else {\n      setSelectedPiece({ label, rowIndex, colIndex })\n    }\n  }\n  const myChessboard = () => (\n    <div className=\"grid grid-cols-8 grid-rows-8 gap-0 w-800 h-800 bg-bisque\">\n      {board.map((row, rowIndex) => (\n        <div key={rowIndex}>\n          {row.map((piece, colIndex) => (\n            <Tile\n              key={`${colIndex}-${rowIndex}`}\n              label={pieceImages[piece]}\n              isEven={(rowIndex + colIndex) % 2 === 0}\n              onMove={handleMove}\n              rowIndex={rowIndex}\n              colIndex={colIndex}\n              selectedPiece={selectedPiece}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n\n  return (\n    <div id=\"chessboard\" className=\"grid grid-cols-8 grid-rows-8 w-800 h-800 bg-bisque\">\n      {board}\n    </div>\n  )\n}\n\nexport default Chessboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}